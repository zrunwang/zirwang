#include<stdio.h>
#include<stdlib.h>
#include<string.h>

#include<iostream>
using namespace std;

void A();	//A->V:=E
void E();	//E->TE'
void T();	//T->FT'
void E1();	//E'->+TE'|-TE'|null
void T1();	//T'->*FT'|/FT'|null
void F();	//F->V(E)
void V();	//V->a|b|c|...|z
bool isLCA(char c);		//lowercase alphabet
char buffer[100];		//存放输入的表达式
char ST[100][3];		//symbol table
int flag=0;				//判断表达式是否有错误
int b_num=0;			//buffer下标
int st_num = 0;			//ST下标	
char ch[2];				//Tn
char n = '1';	

bool isLCA(char c)		//lowercase alphabet
{
	if (c >= 'a' && c <= 'z')
		return 1;
	else
		return 0;
}

void A()		//A->V:=E
{
	V();
	if (buffer[b_num] == ':' && buffer[b_num + 1] == '=')
	{
		b_num += 2;
		E();
		cout << ST[st_num - 2] << ":=" << ST[st_num - 1];
		cout << "     "<< "(:=," << ST[st_num - 1] << ",-," << ST[st_num - 2] << ")" << endl;
	}
	else
	{
		cout << "The assignment symbol error!" << endl;
		flag = 1;
		exit(0);
	}

}

void V()		//V->a|b|c|...|z
{
	if (isLCA(buffer[b_num]))
	{
		ST[st_num][0] = buffer[b_num];
		ST[st_num][1] = '\0';
		st_num++;
		b_num++;
	}
	else
	{
		cout << "Operation object error!" << endl;
		flag = 1;
		exit(0);
	}

}


void E()		//E->TE'
{
	if (flag == 0)
	{
		T();
		E1();
	}
}

void T()	//T->FT'
{
	if (flag == 0)
	{
		F();
		T1();
	}
}

void T1()	//T'->*FT'|/FT'|null
{
	int k;

	if (flag == 0)
	{
		if (buffer[b_num] == '*' || buffer[b_num] == '/')
		{
			k = b_num;
			b_num++;
			F();
			
			ch[0] = 'T';
			ch[1] = n;
			if (buffer[k] == '*')
			{
				cout << ch << ":=" << ST[st_num - 2] << "*" << ST[st_num - 1];
				cout <<"     "<< "(*," << ST[st_num - 2] << "," << ST[st_num - 1] << "," << ch << ")" << endl;
			}
			else
			{
				cout << ch << ":=" << ST[st_num - 2] << "/" << ST[st_num - 1];
				cout <<"     "<< "(/," << ST[st_num - 2] << "," << ST[st_num - 1] << "," << ch << ")" << endl;
			}
			strcpy(ST[st_num - 2], ch);
			st_num--;
			n++;
			T1();
		}
	}
}

void E1()	//E'->+TE'|-TE'|null
{
	int k;

	if (flag == 0)
	{
		if (buffer[b_num] == '+' || buffer[b_num] == '-')
		{
			k = b_num;
			b_num++;
			T();
			ch[0] = 'T';
			ch[1] = n;

			if (buffer[k] == '+')
			{
				cout << ch << ":=" << ST[st_num - 2] << "+" << ST[st_num - 1];
				cout << "     "<< "(+," << ST[st_num - 2] << "," << ST[st_num - 1] << "," << ch << ")" << endl;
			}
			else
			{
				cout << ch << ":=" << ST[st_num - 2] << "-" << ST[st_num - 1];
				cout << "     "<< "(-," << ST[st_num - 2] << "," << ST[st_num - 1] << "," << ch << ")" << endl;
			}
			strcpy(ST[st_num-2],ch);
			st_num--;
			n++;
			E1();
		}
	}
}
void F()	//F->V(E)
{
	if (flag == 0)
	{
		if (buffer[b_num] == '(')
		{
			b_num++;
			E();
			if (buffer[b_num] == ')')
				b_num++;
			else
			{
				cout << "ERROR!" << endl;
				flag = 1;
				exit(0);
			}
		}
		else if (isLCA(buffer[b_num]))
		{
			V();
		}
		else
		{
			cout << "ERROR!" << endl;
			flag = 1;
			exit(0);
		}
	}
}
int main()
{
	cin >> buffer;
	if (buffer[0] == '\0')
		return 0;
	A();
	if (buffer[b_num] != '\0' && flag == 0)
	{
		cout << "ERROR!" << endl;
		exit(0);
	}
	system("pause");
	return 0;
}

